{"version":3,"sources":["NavItem.js","Navbar.js","ContactForm.js","Banner.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["NavItem","text","sectionID","className","href","data-item","Navbar","ContactForm","Banner","title","subtitle","sectionIdentifier","bgColor","showContactForm","id","style","backgroundColor","renderContactForm","Main","App","React","useEffect","MenuActivator","document","querySelector","containerComponent","wrapperComponent","addEventListener","setTimeout","classList","add","contains","remove","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b24a9e59.chunk.js","sourcesContent":["import React from 'react';\r\nimport './NavItem.css';\r\n\r\nfunction NavItem( {text, sectionID} ){\r\n    return(\r\n        <div className=\"NavItem__wrapper\">\r\n            <div className=\"NavItem__container\">\r\n                <a className=\"NavItem\" href={\"#\"+sectionID} data-item={text}>{text}</a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NavItem;","import React from 'react';\r\nimport './Navbar.css';\r\nimport NavItem from './NavItem';\r\n\r\nfunction Navbar(){\r\n    return(\r\n        <section className=\"Navbar__wrapper\">\r\n            <div className=\"Navbar__container\">\r\n                <NavItem text=\"Home\" sectionID=\"home\"/>\r\n                <NavItem text=\"About\" sectionID=\"about\"/>\r\n                <NavItem text=\"Skills\" sectionID=\"skills\"/>\r\n                <NavItem text=\"Projects\" sectionID=\"projects\"/>\r\n                <NavItem text=\"Contact\" sectionID=\"contact\"/>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport './ContactForm.css';\r\n\r\nfunction ContactForm(){\r\n    return(\r\n        <div className=\"contactForm_wrapper\">\r\n            <p>I'm just a mail away.</p>\r\n            <p>manralayush1@gmail.com</p>\r\n            <div className=\"socialLinks\">\r\n                <span className=\"linkedIn_lnk\"><a href=\"https://www.linkedin.com/in/ayush-manral-1a841b12b/\" >LinkedIn</a></span>\r\n                <span className=\"github_lnk\"><a href=\"https://github.com/ayushmanral\" >Github</a></span>\r\n                <span className=\"facebook_lnk\"><a href=\"https://www.facebook.com/manralayush1\" >Facebook</a></span>\r\n                <span className=\"twitter_lnk\"><a href=\"https://twitter.com/AyushManral3\" >Twitter</a></span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport './Banner.css';\r\nimport ContactForm from './ContactForm';\r\n\r\nfunction Banner( { title,\r\n                   subtitle,\r\n                   sectionIdentifier,\r\n                   bgColor,\r\n                   showContactForm\r\n    }){\r\n        \r\n    const renderContactForm = () => {\r\n        if (showContactForm) {\r\n            return <ContactForm/>;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"Banner__wrapper\" id={sectionIdentifier} style={{ backgroundColor: bgColor }}>\r\n                <div className=\"Banner__container\">\r\n                    <h1 className=\"Banner__title\">{title}</h1>\r\n                    <p className=\"Banner__subtitle\">{subtitle}</p>\r\n                </div>\r\n                {renderContactForm()}\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\nimport './Main.css';\r\nimport Banner from './Banner';\r\nimport ContactForm from './ContactForm';\r\n\r\nfunction Main( {title, subtitle, sectionIdentifier} ){\r\n    return(\r\n        <div className=\"container\">\r\n            <Banner title=\"Ayush Manral\" subtitle=\"Hi, I'm Delhi based frontend developer who fancies to learn new skills.\" sectionIdentifier=\"home\" />\r\n            <Banner title=\"About\" subtitle=\"Everything you need to know about me.\" sectionIdentifier=\"about\" />\r\n            <Banner title=\"Skills\" subtitle=\"All the industry relevant skills.\" sectionIdentifier=\"skills\" />\r\n            <Banner title=\"Projects\" subtitle=\"My practice and open-source projects.\" sectionIdentifier=\"projects\" />\r\n            <Banner title=\"Contact\" subtitle=\"Interested in working with me?\" sectionIdentifier=\"contact\" showContactForm=\"true\">\r\n              <ContactForm/>\r\n            </Banner>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;","import React from 'react';\nimport './App.css';\nimport Navbar from './Navbar';\nimport Main from './Main';\n\nfunction App() {\n\n  React.useEffect(() => {\n    var MenuActivator = document.querySelector('.MenuIcon__wrapper'),\n        containerComponent = document.querySelector('.main'),\n        wrapperComponent = document.querySelector('.App');\n\n    MenuActivator.addEventListener('click', ()=>{\n      setTimeout( ()=>{\n        wrapperComponent.classList.add('animate');\n      },25 );\n    });\n\n    containerComponent.addEventListener('click', ()=>{\n      if( wrapperComponent.classList.contains('animate') ){\n        setTimeout( ()=> {\n          wrapperComponent.classList.remove('animate');\n        },25 );\n      }\n    });\n  });\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Navbar/>\n      </header>\n      <main className=\"main\">\n        <div className=\"MenuIcon__wrapper\">\n          <div className=\"MenuIcon\">\n            <span className=\"MenuElement\"></span>\n            <span className=\"MenuElement\"></span>\n            <span className=\"MenuElement\"></span>\n          </div>\n        </div>\n        <Main/>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}